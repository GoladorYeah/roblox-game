-- src/client/controllers/UIController.lua
-- –ü—Ä–æ—Å—Ç–æ–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è –±–∞–∑–æ–≤–æ–≥–æ UI (—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞)

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local BaseController = require(ReplicatedStorage.Shared.BaseController)
local Constants = require(ReplicatedStorage.Shared.constants.Constants)

local UIController = setmetatable({}, { __index = BaseController })
UIController.__index = UIController

function UIController.new()
	local self = setmetatable(BaseController.new("UIController"), UIController)

	self.LocalPlayer = Players.LocalPlayer
	self.PlayerGui = self.LocalPlayer:WaitForChild("PlayerGui")

	-- UI —ç–ª–µ–º–µ–Ω—Ç—ã
	self.MainHUD = nil

	-- –î–µ–±–∞—É–Ω—Å –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–ø–∞–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
	self.LastUpdateTime = 0
	self.UpdateCooldown = 0.1 -- 100–º—Å –º–µ–∂–¥—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏

	return self
end

function UIController:OnInitialize()
	print("[UI CONTROLLER] Initializing basic UI...")
	self:CreateMainHUD()
end

function UIController:OnStart()
	print("[UI CONTROLLER] Basic UI Ready!")
end

-- –°–æ–∑–¥–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π HUD
function UIController:CreateMainHUD()
	-- –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π ScreenGui
	local screenGui = Instance.new("ScreenGui")
	screenGui.Name = "MainHUD"
	screenGui.Parent = self.PlayerGui

	-- –§—Ä–µ–π–º –¥–ª—è –±–∞–∑–æ–≤—ã—Ö —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫
	local statsFrame = Instance.new("Frame")
	statsFrame.Name = "StatsFrame"
	statsFrame.Size = UDim2.new(0, 200, 0, 80) -- –£–º–µ–Ω—å—à–∞–µ–º –≤—ã—Å–æ—Ç—É, —É–±–∏—Ä–∞–µ–º health
	statsFrame.Position = UDim2.new(0, 10, 0, 10)
	statsFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	statsFrame.BackgroundTransparency = 0.5
	statsFrame.BorderSizePixel = 0
	statsFrame.Parent = screenGui

	-- –î–æ–±–∞–≤–ª—è–µ–º —Å–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–µ —É–≥–ª—ã
	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 4)
	corner.Parent = statsFrame

	-- –ó–∞–≥–æ–ª–æ–≤–æ–∫
	local titleLabel = Instance.new("TextLabel")
	titleLabel.Name = "Title"
	titleLabel.Text = "Player Stats"
	titleLabel.Size = UDim2.new(1, 0, 0, 20)
	titleLabel.Position = UDim2.new(0, 0, 0, 0)
	titleLabel.BackgroundTransparency = 1
	titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	titleLabel.TextScaled = true
	titleLabel.Font = Constants.UI.FONTS.BOLD
	titleLabel.Parent = statsFrame

	-- –õ–µ–π–±–ª —É—Ä–æ–≤–Ω—è
	local levelLabel = Instance.new("TextLabel")
	levelLabel.Name = "LevelLabel"
	levelLabel.Text = "Level: 1"
	levelLabel.Size = UDim2.new(1, 0, 0, 20)
	levelLabel.Position = UDim2.new(0, 0, 0, 25)
	levelLabel.BackgroundTransparency = 1
	levelLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	levelLabel.TextScaled = true
	levelLabel.Font = Constants.UI.FONTS.MAIN
	levelLabel.TextXAlignment = Enum.TextXAlignment.Left
	levelLabel.Parent = statsFrame

	-- –õ–µ–π–±–ª –∑–æ–ª–æ—Ç–∞
	local goldLabel = Instance.new("TextLabel")
	goldLabel.Name = "GoldLabel"
	goldLabel.Text = "Gold: 100"
	goldLabel.Size = UDim2.new(1, 0, 0, 20)
	goldLabel.Position = UDim2.new(0, 0, 0, 50)
	goldLabel.BackgroundTransparency = 1
	goldLabel.TextColor3 = Color3.fromRGB(255, 215, 0)
	goldLabel.TextScaled = true
	goldLabel.Font = Constants.UI.FONTS.MAIN
	goldLabel.TextXAlignment = Enum.TextXAlignment.Left
	goldLabel.Parent = statsFrame

	self.MainHUD = screenGui

	print("[UI CONTROLLER] Main HUD created successfully!")
end

-- –û–±–Ω–æ–≤–∏—Ç—å –±–∞–∑–æ–≤—ã–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –Ω–∞ UI (–ë–ï–ó health - —Ç–æ–ª—å–∫–æ —É—Ä–æ–≤–µ–Ω—å –∏ –∑–æ–ª–æ—Ç–æ)
function UIController:UpdateStats(data)
	-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ–±–∞—É–Ω—Å
	local currentTime = tick()
	if currentTime - self.LastUpdateTime < self.UpdateCooldown then
		return -- –°–ª–∏—à–∫–æ–º —á–∞—Å—Ç—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
	end
	self.LastUpdateTime = currentTime

	if self.MainHUD == nil then
		print("[UI CONTROLLER] MainHUD is nil!")
		return
	end

	local statsFrame = self.MainHUD:FindFirstChild("StatsFrame")
	if statsFrame == nil then
		print("[UI CONTROLLER] StatsFrame not found!")
		return
	end

	-- –û–±–Ω–æ–≤–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å
	local levelLabel = statsFrame:FindFirstChild("LevelLabel")
	if levelLabel and data.Level then
		levelLabel.Text = "Level: " .. data.Level
		print("[UI CONTROLLER] Updated level: " .. data.Level)
	end

	-- –û–±–Ω–æ–≤–ª—è–µ–º –∑–æ–ª–æ—Ç–æ
	local goldLabel = statsFrame:FindFirstChild("GoldLabel")
	if goldLabel and data.Currency then
		goldLabel.Text = "Gold: " .. (data.Currency.Gold or 0)
		print("[UI CONTROLLER] Updated gold: " .. (data.Currency.Gold or 0))
	end

	print("[UI CONTROLLER] Basic stats update completed!")
end

-- –ü–æ–∫–∞–∑–∞—Ç—å —Å–∏—Å—Ç–µ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
function UIController:ShowNotification(message, messageType, duration)
	if not self.MainHUD then
		print("[UI CONTROLLER] Cannot show notification - MainHUD not ready")
		return
	end

	messageType = messageType or "INFO"
	duration = duration or 3

	-- –¶–≤–µ—Ç–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
	local colors = {
		INFO = Color3.fromRGB(100, 150, 255),
		SUCCESS = Color3.fromRGB(100, 255, 100),
		WARNING = Color3.fromRGB(255, 200, 100),
		ERROR = Color3.fromRGB(255, 100, 100),
		CRITICAL = Color3.fromRGB(255, 50, 50),
	}

	-- –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
	local notification = Instance.new("Frame")
	notification.Name = "Notification"
	notification.Size = UDim2.new(0, 300, 0, 60)
	notification.Position = UDim2.new(1, -310, 0, 10)
	notification.BackgroundColor3 = colors[messageType] or colors.INFO
	notification.BackgroundTransparency = 0.1
	notification.BorderSizePixel = 0
	notification.Parent = self.MainHUD

	-- –°–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–µ —É–≥–ª—ã
	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 8)
	corner.Parent = notification

	-- –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
	local messageLabel = Instance.new("TextLabel")
	messageLabel.Name = "Message"
	messageLabel.Size = UDim2.new(1, -20, 1, -20)
	messageLabel.Position = UDim2.new(0, 10, 0, 10)
	messageLabel.BackgroundTransparency = 1
	messageLabel.Text = message
	messageLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	messageLabel.TextScaled = true
	messageLabel.TextWrapped = true
	messageLabel.Font = Constants.UI.FONTS.MAIN
	messageLabel.TextStrokeTransparency = 0.5
	messageLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
	messageLabel.Parent = notification

	-- –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
	local TweenService = game:GetService("TweenService")

	-- –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è (–∑–∞ —ç–∫—Ä–∞–Ω–æ–º)
	notification.Position = UDim2.new(1, 10, 0, 10)

	-- –ê–Ω–∏–º–∞—Ü–∏—è –≤—Ö–æ–¥–∞
	local slideIn = TweenService:Create(
		notification,
		TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
		{ Position = UDim2.new(1, -310, 0, 10) }
	)
	slideIn:Play()

	-- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ
	spawn(function()
		wait(duration)

		-- –ê–Ω–∏–º–∞—Ü–∏—è –≤—ã—Ö–æ–¥–∞
		local slideOut =
			TweenService:Create(notification, TweenInfo.new(0.3, Enum.EasingStyle.Quart, Enum.EasingDirection.In), {
				Position = UDim2.new(1, 10, 0, 10),
				BackgroundTransparency = 1,
			})

		-- –ê–Ω–∏–º–∞—Ü–∏—è –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
		local fadeText = TweenService:Create(
			messageLabel,
			TweenInfo.new(0.3, Enum.EasingStyle.Quart, Enum.EasingDirection.In),
			{ TextTransparency = 1 }
		)

		slideOut:Play()
		fadeText:Play()

		slideOut.Completed:Connect(function()
			if notification.Parent then
				notification:Destroy()
			end
		end)
	end)

	print("[UI CONTROLLER] Notification shown: " .. messageType .. " - " .. message)
end

-- –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≤—ã—à–µ–Ω–∏–∏ —É—Ä–æ–≤–Ω—è
function UIController:ShowLevelUpEffect(newLevel, attributePoints)
	if not self.MainHUD then
		return
	end

	-- –°–æ–∑–¥–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç –ø–æ–≤—ã—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è
	local levelUpFrame = Instance.new("Frame")
	levelUpFrame.Name = "LevelUpEffect"
	levelUpFrame.Size = UDim2.new(0, 400, 0, 150)
	levelUpFrame.Position = UDim2.new(0.5, -200, 0.3, -75)
	levelUpFrame.BackgroundColor3 = Color3.fromRGB(255, 215, 0)
	levelUpFrame.BackgroundTransparency = 0.2
	levelUpFrame.BorderSizePixel = 0
	levelUpFrame.Parent = self.MainHUD

	-- –°–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–µ —É–≥–ª—ã
	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 12)
	corner.Parent = levelUpFrame

	-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ "LEVEL UP!"
	local titleLabel = Instance.new("TextLabel")
	titleLabel.Name = "Title"
	titleLabel.Size = UDim2.new(1, 0, 0, 50)
	titleLabel.Position = UDim2.new(0, 0, 0, 10)
	titleLabel.BackgroundTransparency = 1
	titleLabel.Text = "üéâ LEVEL UP! üéâ"
	titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	titleLabel.TextScaled = true
	titleLabel.Font = Constants.UI.FONTS.BOLD
	titleLabel.TextStrokeTransparency = 0
	titleLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
	titleLabel.Parent = levelUpFrame

	-- –ù–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å
	local levelLabel = Instance.new("TextLabel")
	levelLabel.Name = "Level"
	levelLabel.Size = UDim2.new(1, 0, 0, 40)
	levelLabel.Position = UDim2.new(0, 0, 0, 60)
	levelLabel.BackgroundTransparency = 1
	levelLabel.Text = "Level " .. newLevel
	levelLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	levelLabel.TextScaled = true
	levelLabel.Font = Constants.UI.FONTS.MAIN
	levelLabel.TextStrokeTransparency = 0.5
	levelLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
	levelLabel.Parent = levelUpFrame

	-- –û—á–∫–∏ –∞—Ç—Ä–∏–±—É—Ç–æ–≤
	if attributePoints and attributePoints > 0 then
		local pointsLabel = Instance.new("TextLabel")
		pointsLabel.Name = "Points"
		pointsLabel.Size = UDim2.new(1, 0, 0, 30)
		pointsLabel.Position = UDim2.new(0, 0, 0, 105)
		pointsLabel.BackgroundTransparency = 1
		pointsLabel.Text = "+" .. attributePoints .. " Attribute Points"
		pointsLabel.TextColor3 = Color3.fromRGB(200, 255, 200)
		pointsLabel.TextScaled = true
		pointsLabel.Font = Constants.UI.FONTS.MAIN
		pointsLabel.TextStrokeTransparency = 0.5
		pointsLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
		pointsLabel.Parent = levelUpFrame
	end

	-- –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –∏ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
	local TweenService = game:GetService("TweenService")

	-- –ù–∞—á–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
	levelUpFrame.Size = UDim2.new(0, 0, 0, 0)
	levelUpFrame.Position = UDim2.new(0.5, 0, 0.3, 0)

	-- –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
	local expandTween =
		TweenService:Create(levelUpFrame, TweenInfo.new(0.8, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
			Size = UDim2.new(0, 400, 0, 150),
			Position = UDim2.new(0.5, -200, 0.3, -75),
		})
	expandTween:Play()

	-- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ 4 —Å–µ–∫—É–Ω–¥—ã
	spawn(function()
		wait(4)

		local fadeTween = TweenService:Create(
			levelUpFrame,
			TweenInfo.new(1, Enum.EasingStyle.Quart, Enum.EasingDirection.Out),
			{ BackgroundTransparency = 1 }
		)

		local fadeTitle = TweenService:Create(
			titleLabel,
			TweenInfo.new(1, Enum.EasingStyle.Quart, Enum.EasingDirection.Out),
			{ TextTransparency = 1 }
		)

		local fadeLevel = TweenService:Create(
			levelLabel,
			TweenInfo.new(1, Enum.EasingStyle.Quart, Enum.EasingDirection.Out),
			{ TextTransparency = 1 }
		)

		fadeTween:Play()
		fadeTitle:Play()
		fadeLevel:Play()

		fadeTween.Completed:Connect(function()
			if levelUpFrame.Parent then
				levelUpFrame:Destroy()
			end
		end)
	end)

	print("[UI CONTROLLER] Level up effect shown: Level " .. newLevel)
end

-- –ü–æ–ª—É—á–∏—Ç—å –≥–ª–∞–≤–Ω—ã–π HUD (–¥–ª—è –¥—Ä—É–≥–∏—Ö –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤)
function UIController:GetMainHUD()
	return self.MainHUD
end

-- –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ UI
function UIController:IsUIReady()
	return self.MainHUD ~= nil
end

function UIController:OnCleanup()
	if self.MainHUD then
		self.MainHUD:Destroy()
		self.MainHUD = nil
	end

	print("[UI CONTROLLER] UI controller cleaned up")
end

return UIController
